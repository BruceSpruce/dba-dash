<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADO
        CgAAAk1TRnQBSQFMAgEBAwIAAQIBAAECARABAAEQAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABGAYAAQweAAP0EvYD8w8AA/En9g8AA/QS9gPzRQAD9QHnAegB9QEAARQB5QEAARQB5QEA
        ARQB5QEAARQB5QEAARQB5QEAARQB5QFcAWkB6wP2A/UGAAPxA/YBAAHMAf8BAAHMAf8BAAHMAf8BAAHM
        Af8BAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BXAHcAfwD9gkA
        A/UB6gHwAeoBMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkBMwF8AbwBfAP2A/U8AAP2AWwBdwHsAQABFAHl
        AQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlA/YD9QMAA/QBuQHs
        AfgBAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BAAHMAf8BAAFmAYAEAAHMAf8BAAHMAf8BAAHMAf8BAAHM
        Af8BAAHMAf8BAAHMAf8D9gYAA/YBiAHCAYgBMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkCMwGZAjMBmQIz
        AZkBMwP2A/U2AAPyAakBrwHxAQABFAHlAQABFAHlAWABbAHvAQABFAHlAQABFAHlAQABFAHlAQABFAHl
        AQABFAHlAQABFAHlAQABFAHlAQABFAHlA/YGAAP2AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/
        BwABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/AbkB7AH4A/QDAAPyAbkB2QG5ATMBmQIzAZkBMwGA
        Ab8BgAb/ATMBmQIzAZkCMwGZAjMBmQIzAZkCMwGZATMD9jYAA/YBAAEUAeUBAAEUAeUBnwGnAfUD/wGf
        AacB9QEAARQB5QEAARQB5QEAARQB5Qb/AQABFAHlAQABFAHlAVwBaQHrA/MDAAP0AbkB7AH4AQABzAH/
        AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/AQABzAH/
        A/YGAAP2ATMBmQIzAZkCMwGZATMJ/wGAAb8BgAEzAZkCMwGZAjMBmQIzAZkCMwGZATMBfAG8AXwD8zAA
        A/EBigGTAe8BAAEUAeUBAAEUAeUBnwGnAfUG/wGfAacB9QEAARQB5Qn/AQABFAHlAQABFAHlAQABFAHl
        A/YGAAP2AQABzAH/AQABzAH/AQABzAH/AQABzAH/BwABzAH/AQABzAH/AQABzAH/AQABzAH/AbkB7AH4
        A/QDAAPxAaEBzQGhATMBmQIzAZkBMwGAAb8BgAP/AeYB8gHmBv8BMwGZAjMBmQIzAZkCMwGZAjMBmQIz
        AZkBMwP2MAAD9gEPASIB5gEAARQB5QEAARQB5QEAARQB5QGfAacB9Q//AQABFAHlAQABFAHlAQABFAHl
        AQABFAHlA/YGAAP0AbkB7AH4AQABzAH/AQABzAH/AQABzAH/BwABzAH/AQABzAH/AQABzAH/AQABzAH/
        A/YGAAP2AT8BnwE/ATMBmQIzAZkBMwb/ATMBmQEzAeYB8gHmA/8BgAG/AYABMwGZAjMBmQIzAZkCMwGZ
        AjMBmQEzA/YwAAP2AQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlAZ8BpwH1Cf8BAAEUAeUBAAEU
        AeUBAAEUAeUBAAEUAeUBAAEUAeUD9gkAA/YBAAHMAf8BAAHMAf8BAAHMAf8HAAHMAf8BAAHMAf8BAAHM
        Af8BuQHsAfgD9AYAA/YBMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkCMwGZATMG/wEzAZkCMwGZAjMBmQIz
        AZkCMwGZATMD9jAAA/YBAAEUAeUBAAEUAeUBAAEUAeUBAAEUAeUBAAEUAeUM/wGfAacB9QEAARQB5QEA
        ARQB5QEAARQB5QEAARQB5QP2CQAD9AGpAekB+QEAAcwB/wEAAcwB/wcAAcwB/wEAAcwB/wEAAcwB/wP2
        CQAD9gEzAZkCMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkBMwHmAfIB5gP/AYABvwGAATMBmQIzAZkCMwGZ
        AjMBmQEzA/YwAAPyAU0BWwHqAQABFAHlAQABFAHlAQABFAHlCf8BnwGnAfUG/wGfAacB9QEAARQB5QEA
        ARQB5QEAARQB5QP2DAAD9gEAAcwB/wEAAcwB/wcAAcwB/wEAAcwB/wGaAeYB+QP0CQAD8gFwAbYBcAEz
        AZkCMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkBMwb/ATMBmQIzAZkCMwGZAjMBmQEzA/YwAAP4AecB6AH1
        AQABFAHlAQABFAHlCf8BAAEUAeUBAAEUAeUBnwGnAfUG/wFgAWwB7wEAARQB5QEAARQB5QP2DAAD9AGa
        AeYB+QEAAcwB/wcAAcwB/wEAAcwB/wP2DAAD+AHqAfAB6gEzAZkCMwGZAjMBmQIzAZkCMwGZAjMBmQIz
        AZkBMwHmAfIB5gP/AYABvwGAATMBmQIzAZkCMwGZATMD9jMAA/YBDwEiAeYBAAEUAeUBAAEUAeUD/wEA
        ARQB5QEAARQB5QEAARQB5QEAARQB5QGfAacB9QGfAacB9QEAARQB5QEAARQB5QHnAegB9QP0DwAD9gEA
        AcwB/wEAAcwB/wEAAcwB/wEAAcwB/wGaAeYB+QP0DwAD9gE/AZ8BPwEzAZkCMwGZAjMBmQIzAZkCMwGZ
        AjMBmQIzAZkBMwb/ATMBmQIzAZkBMwHqAfAB6gP0MwAD+gP2AQABFAHlAQABFAHlAQABFAHlAQABFAHl
        AQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlAQABFAHlAWwBdwHsA/USAAP0AZoB5gH5AQABzAH/
        AQABzAH/AQABzAH/A/YSAAP6A/YBMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkCMwGZAjMBmQIzAZkCMwGZ
        ATMBiAHCAYgD9TkAA/QD9gEPASIB5gEAARQB5QEAARQB5QEAARQB5QEAARQB5QEAARQB5QEAARQB5QEA
        ARQB5QGpAa8B8QP2GAAD9gEAAcwB/wEAAcwB/wGaAeYB+QP0FQAD9AP2AT8BnwE/ATMBmQIzAZkCMwGZ
        AjMBmQIzAZkCMwGZAjMBmQEzAbkB2QG5A/Y/AAP6A/YB5wHoAfUBTQFbAeoBAAEUAeUBAAEUAeUBDwEi
        AeYBigGTAe8D9gPyGwAD9AGaAeYB+QEAAcwB/wP2GwAD+gP2AeoB8AHqAXABtgFwATMBmQIzAZkBMwE/
        AZ8BPwGhAc0BoQP2A/JIAAP4A/IJ9gPxJAAG9gP0IQAD+APyCfYD8T8AAUIBTQE+BwABPgMAASgDAAFA
        AwABEAMAAQEBAAEBBQABgBcAA/8BAAHwAQ8BgAEBAfABDwIAAeABAwIAAeABAwIAAcABAQIAAcABAQIA
        AYABAQGAAQABgAEBAgABgAEAAYABAQGABQABwAEBBgABwAEDBgAB4AEDBgAB4AEHBgAB8AEHBgAB8AEP
        BAABgAEAAfgBDwGAAwABgAEBAfgBHwGAAQECAAHAAQMB/AEfAcABAwIAAeABBwH8AT8B4AEHAgAB+AEf
        Af4BPwH4AR8CAAs=
</value>
  </data>
</root>