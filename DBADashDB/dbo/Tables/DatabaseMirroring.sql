CREATE TABLE dbo.DatabaseMirroring
(
    DatabaseID INT NOT NULL,
    InstanceID INT NOT NULL,
    [mirroring_guid] UNIQUEIDENTIFIER,
    [mirroring_state] TINYINT,
    [mirroring_state_desc] AS CASE mirroring_state WHEN 0 THEN 'SUSPENDED' WHEN 1 THEN 'DISCONNECTED' WHEN 2 THEN 'SYNCHRONIZING' WHEN 3 THEN 'PENDING_FAILOVER' WHEN 4 THEN 'SYNCHRONIZED' WHEN 5 THEN 'UNSYNCHRONIZED' WHEN 6 THEN 'SYNCHRONIZED' ELSE NULL END,
    [mirroring_role] TINYINT,
    [mirroring_role_desc] AS CASE mirroring_role WHEN 1 THEN 'PRINCIPAL' WHEN 2 THEN 'MIRROR' ELSE NULL END,
    [mirroring_role_sequence] INT,
    [mirroring_safety_level] TINYINT,
    [mirroring_safety_level_desc] AS CASE mirroring_safety_level WHEN 0 THEN 'UNKNOWN' WHEN 1 THEN 'OFF' WHEN 2 THEN 'FULL' ELSE NULL END,
    [mirroring_safety_sequence] INT,
    [mirroring_partner_name] NVARCHAR(128),
    [mirroring_partner_instance] NVARCHAR(128),
    [mirroring_witness_name] NVARCHAR(128),
    [mirroring_witness_state] TINYINT,
    [mirroring_witness_state_desc] AS CASE mirroring_witness_state WHEN 0 THEN  'UNKNOWN' WHEN 1 THEN 'CONNECTED' WHEN 2 THEN 'DISCONNECTED' ELSE NULL END,
    [mirroring_failover_lsn] DECIMAL(25, 0),
    [mirroring_connection_timeout] INT,
    [mirroring_redo_queue] INT,
    [mirroring_redo_queue_type] NVARCHAR(60),
    [mirroring_end_of_log_lsn] DECIMAL(25, 0),
    [mirroring_replication_lsn] DECIMAL(25, 0),
    CONSTRAINT FK_DatabaseMirroring_Databases FOREIGN KEY(DatabaseID) REFERENCES dbo.Databases(DatabaseID),
    CONSTRAINT PK_DatabaseMirroring PRIMARY KEY(InstanceID,DatabaseID),
    CONSTRAINT UX_DatabaseMirroring UNIQUE(DatabaseID)
);